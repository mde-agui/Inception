version: '3.8'

services:
  nginx:
    build: ./requirements/nginx
    container_name: nginx
    ports:
      - "443:443"
    volumes:
      - wordpress_files:/var/www/html
    networks:
      - inception
    depends_on:
      wordpress:
        condition: service_healthy
    restart: always
    env_file:
      - .env
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}

  nginx_exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx_exporter
    command:
      - "--nginx.scrape-uri=http://nginx/nginx_status"
    ports:
      - "9113:9113"
    networks:
      - inception
    depends_on:
      - nginx
    restart: always
    env_file:
      - .env

  wordpress:
    build: ./requirements/wordpress
    container_name: wordpress
    volumes:
      - wordpress_files:/var/www/html
    networks:
      - inception
    depends_on:
      mariadb:
        condition: service_healthy
      redis:
        condition: service_started
    restart: always
    healthcheck:
      test: ["CMD", "pidof", "php-fpm7.4"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    env_file:
      - .env
    environment:
      - WORDPRESS_DB_HOST=mariadb
      - WORDPRESS_DB_NAME=${DB_NAME}
      - WORDPRESS_DB_USER=${DB_USER}
      - WORDPRESS_DB_PASSWORD=${DB_PASS}
      - REDIS_PASS=${REDIS_PASS}
      - WORDPRESS_CONFIG_EXTRA=define('WP_DEBUG', true); define('WP_DEBUG_LOG', '/var/www/html/wp-debug.log); define('WP_DEBUG_DISPLAY', false);

  mariadb:
    build: ./requirements/mariadb
    container_name: mariadb
    volumes:
      - wordpress_db:/var/lib/mysql
    networks:
      - inception
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASS}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASS}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - WP_ADMIN_USER=${WP_ADMIN_USER}
      - WP_ADMIN_PASS=${WP_ADMIN_PASS}

  mysqld_exporter:
    image: prom/mysqld-exporter:v0.14.0
    container_name: mysqld_exporter
    networks:
      - inception
    ports:
      - "9104:9104"
    environment:
      - DATA_SOURCE_NAME=${DB_USER}:${DB_PASS}@(mariadb:3306)/
    command:
      - "--web.listen-address=:9104"
    depends_on:
      mariadb:
        condition: service_healthy

  redis:
    build: ./requirements/bonus/redis
    container_name: redis
    networks:
      - inception
    restart: always
    env_file:
      - .env
    environment:
      - REDIS_PASS=${REDIS_PASS}

  ftp:
    build:
      context: ./requirements/bonus/ftp
      args:
        DOMAIN_NAME: ${DOMAIN_NAME}
    container_name: ftp
    ports:
      - "20:20"
      - "21:21"
      - "10000-10100:10000-10100"
    volumes:
      - wordpress_files:/var/www/html
    networks:
      - inception
    restart: always
    env_file:
      - .env
    environment:
      - FTP_USER=${FTP_USER}
      - FTP_PASS=${FTP_PASS}
      - DOMAIN_NAME=${DOMAIN_NAME}

  static:
    build: ./requirements/bonus/static
    container_name: static
    ports:
      - "8080:8080"
    networks:
      - inception
    restart: always
    env_file:
      - .env
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}

  adminer:
    build: ./requirements/bonus/adminer
    container_name: adminer
    ports:
      - "8081:8081"
    networks:
      - inception
    restart: always
    env_file:
      - .env
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
    depends_on:
      mariadb:
        condition: service_healthy

  prometheus:
    build: ./requirements/bonus/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    networks:
      - inception
    restart: always
    env_file:
      - .env

  node_exporter:
    build: ./requirements/bonus/node_exporter
    container_name: node_exporter
    ports:
      - "9100:9100"
    networks:
      - inception
    restart: always
    env_file:
      - .env

  grafana:
    build: ./requirements/bonus/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - inception
    restart: always
    env_file:
      - .env
    depends_on:
      prometheus:
        condition: service_started

  portainer:
    image: portainer/portainer-ce:2.20.3
    container_name: portainer
    restart: always
    ports:
      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - inception

volumes:
  wordpress_files:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${WORDPRESS_PATH}
  wordpress_db:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATABASE_PATH}
  portainer_data:
    driver: local

networks:
  inception:
    name: inception
    driver: bridge
